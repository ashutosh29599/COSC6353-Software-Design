[Reviewed 03/07/23 21:19 PM CET]
synopsis: you're done

details: 

yay

------------------------------------------------------------------------------
[Reviewed 03/07/23 17:32 PM CET]
synopsis: let's keep it DRY

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/07/23 17:07 PM CET]
synopsis: breach of encapsulation

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/07/23 05:33 AM CET]
synopsis: we need to understand how seed works

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/06/23 17:55 PM CET]
synopsis: let's simplify

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/06/23 05:14 AM CET]
synopsis: a few things to improve

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/05/23 20:32 PM CET]
synopsis: time for the GUI

details: 

Please see suggestions in files.

Let us make changes to the GUI to work with the new feature.

------------------------------------------------------------------------------
[Reviewed 03/05/23 10:39 AM CET]
synopsis: a few things to improve

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/04/23 12:34 PM CST]
synopsis: good so far

details: 

Let's reduce code. Please see suggestions in files.

Good so far. Let's look at the next few tests.

get_a_random_word_given_a_seed:
-given a seed and a list of words, get a random word
-given the same seed, get two random words and verify they are different

-verify that get_a_random_word calls get_response, parse, and get_a_random_word_given_a_seed

-verify that get_a_random_word calls get_random_word_given_a_seed with a seed
-verify that get_a_random_word calls get_random_word_given_a_seed with a 
different seed when called a second time

-check the random word is of length 5
-check the word is in all caps

------------------------------------------------------------------------------
[Reviewed 03/04/23 03:54 AM MST]
synopsis: let's revisit an earlier test

details: 

Please see suggestions in files.

-get response returns some response string

-parse response takes a string of words and returns a list of words
-parse returns takes an empty string of words and returns an empty list
-parse throws an exception if string does not have a list

------------------------------------------------------------------------------
[Reviewed 03/03/23 17:32 PM MST]
synopsis: nice work so far

details: 

Nice work so far. Let's proceed to list all the tests we can think of for the random word selection. Then let us implement one of those tests. This will give us an opportunity to think of tests, get them reviewed, and change directions if needed.

------------------------------------------------------------------------------
[Reviewed 03/03/23 10:05 AM MST]
synopsis: did not find any new tests in tests.txt

details: 

Did not find any new tests in tests.txt.

------------------------------------------------------------------------------
[Reviewed 03/03/23 04:42 AM MST]
synopsis~: UI needs a little fixing; let's focus on getting a random word

details: 

Enter a wrong spelling, a dialog says spelling is correct. Press enter to dispose the dialog, hit backspace, nothing happens. The focus should be on the main window so that it does not require an additional step by the player.

Let's work on the next set of tests to get a random word. Let's write one test and see how that goes.

------------------------------------------------------------------------------
[Reviewed 03/02/23 17:26 PM MST]
synopsis: OCP

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 03/02/23 09:56 AM MST]
synopsis: nice work so far

details: 

Very nice progress.

Let's think of the next step now. What should be work on?

Please take a small step and let us see where we are heading.

------------------------------------------------------------------------------
[Reviewed 03/02/23 05:43 AM MST]
synopsis~: let's not burden the caller

details: 

Please see suggestions in files.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 03/01/23 20:28 PM CST]
synopsis: let's take a look at the next tests

details: 

-is_spelling_correct calls get_response and parse
-is_spelling_correct passes on the exception from get_response to the caller

------------------------------------------------------------------------------
[Reviewed 03/01/23 10:16 AM CST]
synopsis: let's revisit the next tests

details: 

-parse true to boolean True
-parse false to boolean False

After that, let's take the next small step - one next test.

------------------------------------------------------------------------------
[Reviewed 03/01/23 05:42 AM CST]
synopsis~: let's revisit the test

details: 

Please see suggestions in files.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 02/28/23 05:00 AM CST]
synopsis: good work so far

details: 

Good work so far. Let's change a few minor things.

It is now time to talk to the service to get the spelling
-get_response takes 'FAVOR' returns some response

After that, let's take the next small step - one next test.

------------------------------------------------------------------------------
[Reviewed 02/27/23 17:30 PM CST]
synopsis~: good so far

details: 

Good so far.

Let's take the next small step - one test, minimum code for that to check on the direction of the design.

------------------------------------------------------------------------------
[Reviewed 02/27/23 05:27 AM CST]
synopsis~: good so far

details: 

Good so far. Please see suggestions in files.

-play passes on the exception from is_spelling_correct to the caller

------------------------------------------------------------------------------
[Reviewed 02/26/23 17:46 PM CST]
synopsis: let's move forward to a few more tests

details: 

Let's move forward to a few more tests:

-play for target "FAVOR", guess "FAVOR", and attempts 0 returns response that is empty, status WRONG_SPELLING assuming the spelling is not correct; attempts returned should be 0

-play for target "FAVOR", guess "RIVER", and attempts 0 returns response that is empty, status WRONG_SPELLING assuming the spelling is not correct; attempts returned should be 0

------------------------------------------------------------------------------
[Reviewed 02/26/23 08:54 AM CST]
synopsis~: Let's take on the next test

details: 

Let's focus on the test mentioned in tests.txt.

-play with another correct spelling
For this test we will pass "FAVOR" for target and "RIVER" for guess to play, with attempt 0. The play will access a mock that will return true for is_spelling_correct("RIVER"). The play will then return the appropriate response, attempts = 1, status of in progress, etc. The test should check that the mock was called with FAVOR.

------------------------------------------------------------------------------
[Reviewed 02/26/23 07:54 AM CST]
synopsis~: let's rework the test

details: 

Please see suggestions in files.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 02/25/23 18:28 PM CST]
synopsis: Let's rework the test

details: 

Let's focus on the test mentioned in tests.txt.

-play with correct spelling
For this test we will pass "FAVOR" for target and "FAVOR" for guess to play, with attempt 0. The play will access a mock that will return true for is_spelling_correct("FAVOR"). The play will then return a response of all EXACT, attempts = 1, status of WIN, etc. The test should check that the mock was called with FAVOR.

------------------------------------------------------------------------------
[Reviewed 02/25/23 05:36 AM MST]
synopsis~: let's change directions

details: 

We want to start with the most interesting and useful feature to the least interesting. For the give problem the most interesting is checking the spelling, the least, getting a random word. We will start with checking the spelling. Let's write one test for that.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 02/24/23 11:37 AM MST]
synopsis: looks good, let's take the first step

details: 

Looks good. Let's take the first small step for the new features.

------------------------------------------------------------------------------
